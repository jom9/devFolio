{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marti\\\\devFolio\\\\src\\\\component\\\\Content.js\";\nimport React from 'react';\nimport '../index.css';\nimport axios from 'axios';\nimport Projects from './Projects.js';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\";\nlet match = useRouteMatch();\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\"\n    };\n    this.getAboutMe = this.getAboutMe.bind(this);\n    this.setExample = this.setExample.bind(this);\n  }\n\n  setExample(prevProps) {\n    if (this.props.val != prevProps.val && this.props.val == \"projects\") {\n      axios.get(match.url + '/examples/cppchess.html').then(response => {\n        console.log(response.data);\n        this.setState({\n          content: response.data\n        });\n      });\n    }\n  }\n\n  setAboutMe(prevProps) {\n    if (this.props.val != prevProps.val && this.props.val == \"home\") {\n      axios.get('/aboutme.html').then(response => {\n        console.log(response.data);\n        this.setState({\n          content: response.data\n        });\n      });\n    }\n  }\n\n  getAboutMe() {\n    return {\n      __html: this.state.content\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/aboutme.html').then(response => {\n      console.log(response.data);\n      this.setState({\n        content: response.data\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    this.setAboutMe(prevProps);\n    this.setExample(prevProps);\n  }\n\n  render() {\n    console.log(process.env.PUBLIC_URL);\n\n    if (this.props.val == 'home') {\n      return /*#__PURE__*/React.createElement(Router, {\n        basename: process.env.PUBLIC_URL + \"/devFolio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: this.getAboutMe(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }))));\n    } else if (this.props.val == 'projects') {\n      return /*#__PURE__*/React.createElement(Projects, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 16\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Router, {\n        basename: process.env.PUBLIC_URL + \"/devFolio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        dangerouslySetInnerHTML: this.getAboutMe(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["C:/Users/marti/devFolio/src/component/Content.js"],"names":["React","axios","Projects","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","match","Content","Component","constructor","props","state","content","getAboutMe","bind","setExample","prevProps","val","get","url","then","response","console","log","data","setState","setAboutMe","__html","componentDidMount","componentDidUpdate","render","process","env","PUBLIC_URL"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\nimport axios from 'axios';\r\nimport Projects from './Projects.js'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\nlet match = useRouteMatch();\r\nclass Content extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      content:\"\"\r\n    };\r\n    this.getAboutMe = this.getAboutMe.bind(this);\r\n    this.setExample = this.setExample.bind(this);\r\n  }\r\n  setExample(prevProps){\r\n    if(this.props.val!=prevProps.val &&this.props.val==\"projects\"){\r\n      axios.get(match.url+'/examples/cppchess.html')\r\n  .then((response) => {\r\n    console.log(response.data);\r\n    this.setState({content:response.data})\r\n  });\r\n    }\r\n  }\r\n  setAboutMe(prevProps){\r\n    if(this.props.val!=prevProps.val &&this.props.val==\"home\"){\r\n      axios.get('/aboutme.html')\r\n  .then((response) => {\r\n    console.log(response.data);\r\n    this.setState({content:response.data})\r\n  });\r\n    }\r\n  }\r\n  getAboutMe(){\r\n    return {__html:this.state.content};\r\n  }\r\n  componentDidMount(){\r\n    axios.get('/aboutme.html').then((response) => {console.log(response.data);\r\n      this.setState({content:response.data})\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    this.setAboutMe(prevProps);\r\n    this.setExample(prevProps);\r\n  }\r\n  render(){\r\n    console.log(process.env.PUBLIC_URL);\r\n      if(this.props.val=='home'){\r\n      return(\r\n        <Router basename={process.env.PUBLIC_URL+\"/devFolio\"}>\r\n          <div className=\"site-content\">\r\n            <div className=\"primary\">\r\n              <div dangerouslySetInnerHTML={this.getAboutMe()}/>\r\n            </div>\r\n          </div>\r\n          </Router>\r\n        );\r\n      }\r\n      else if(this.props.val=='projects'){\r\n        return(<Projects/>);\r\n      }\r\n      else{\r\n        return(\r\n          <Router basename={process.env.PUBLIC_URL+\"/devFolio\"}>\r\n            <div className=\"site-content\">\r\n              <div className=\"primary\">\r\n                <div dangerouslySetInnerHTML={this.getAboutMe()}/>\r\n              </div>\r\n            </div>\r\n            </Router>\r\n          );\r\n      }\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Content;\r\n"]},"metadata":{},"sourceType":"module"}